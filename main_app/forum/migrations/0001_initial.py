# Generated by Django 4.0.4 on 2022-05-30 23:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import forum.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ForumUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username_lower', models.CharField(editable=False, max_length=20)),
                ('slug', models.SlugField(editable=False, max_length=20, unique=True, verbose_name='URL')),
                ('user_image', models.ImageField(blank=True, default='/forum/user_images/default_profile.jpg', upload_to=forum.models.forumusers_file_name, verbose_name='profile image')),
                ('about_user', models.TextField(blank=True, verbose_name='about user')),
                ('reputation', models.IntegerField(default=0, verbose_name='reputation')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('username_lower',),
            },
        ),
        migrations.CreateModel(
            name='Sections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True, verbose_name='name')),
                ('name_lower', models.CharField(editable=False, max_length=40)),
                ('slug', models.SlugField(editable=False, max_length=60, unique=True, verbose_name='URL')),
                ('order', models.SmallIntegerField(db_index=True, default=0, editable=False, verbose_name='order')),
                ('super_sections', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='forum.sections', verbose_name='super section')),
            ],
            options={
                'verbose_name': 'section',
                'verbose_name_plural': 'sections',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='title')),
                ('name_lower', models.CharField(editable=False, max_length=100)),
                ('slug', models.SlugField(editable=False, max_length=100, unique=True, verbose_name='URL')),
                ('view_count', models.IntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0)], verbose_name='views count')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='time create')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='forum.forumusers', verbose_name='author')),
                ('sections', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='forum.sections', verbose_name='section')),
            ],
            options={
                'verbose_name': 'topic',
                'verbose_name_plural': 'topics',
                'ordering': ('-time_create', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=15000, verbose_name='post')),
                ('post_type', models.IntegerField(choices=[(0, 'question'), (1, 'answer')])),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='time create')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='time update')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='forum.forumusers', verbose_name='author')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum.topics', verbose_name='topic')),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
                'ordering': ('topic', 'post_type', 'time_create', 'author'),
            },
        ),
        migrations.CreateModel(
            name='AttachedFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=forum.models.posts_file_name, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'jpg', 'png', 'jfif', 'bmp', 'svg', 'tif', 'txt', 'doc', 'docx', 'xlsx', 'pptx'])], verbose_name='file')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='time create')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum.posts', verbose_name='post')),
            ],
            options={
                'verbose_name': 'attached file',
                'verbose_name_plural': 'attached files',
                'ordering': ('time_create',),
            },
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_type', models.IntegerField(choices=[(0, 'Rate'), (1, 'Views')], editable=False, verbose_name='type of statistics')),
                ('value', models.IntegerField(default=0, verbose_name='value of statistics')),
                ('object_id', models.PositiveIntegerField(verbose_name='ID record')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='model')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum.forumusers', verbose_name='user')),
            ],
            options={
                'verbose_name': 'statistics',
                'verbose_name_plural': 'statistics',
                'ordering': ('value_type', 'user', 'object_id'),
                'unique_together': {('user', 'value_type', 'object_id')},
            },
        ),
    ]
